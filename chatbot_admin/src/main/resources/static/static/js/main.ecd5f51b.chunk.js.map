{"version":3,"sources":["store/modules/board/type.js","static/constant.js","store/modules/board/reducer.js","store/modules/main/type.js","store/modules/main/reducer.js","store/rootReducer.js","components/Main.js","store/api/userApi.js","store/modules/main/action.js","containers/MainContainer.js","store/api/boardApi.js","helper/boardHelper.js","store/modules/board/action.js","components/Selector.js","components/Board.js","components/ContentsModal.js","helper/specification.js","components/Topbar.js","containers/BoardContainer.js","App.js","index.js"],"names":["DOMAIN","searchType","value","print","initialState","pageNumber","pageSize","selectedData","isModalOpen","modalData","isWriteModal","isSearch","keyword","boardId","isRequestFail","errorCode","errorMessage","handleActions","type","state","action","payload","code","message","accountId","role","isLogged","isLoginPage","rootReducer","combineReducers","main","board","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","form","width","submit","Main","handleClick","pageChange","classes","useState","setAccountId","password","setPassword","useEffect","Container","component","maxWidth","CssBaseline","className","Avatar","gutterBottom","noValidate","onSubmit","event","preventDefault","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","target","Button","Grid","container","item","xs","onClick","Box","mt","loginApi","a","axios","post","response","data","status","joinApi","logoutApi","get","loginSuccess","createAction","loginFail","joinFail","connect","dispatch","history","useHistory","loginSubmit","alert","push","joinSubmit","getForSearch","getData","prevFakeData","createPrevFakeData","nextFakeData","createNextFakeData","realData","setRealData","contents","isFirstPage","length","Array","totalPages","concat","isLastPage","forEach","element","idx","month","createdAt","dayOfMonth","hour","minute","size","apply","map","Object","prototype","valueOf","currentValue","index","setFakeData","fakeData","tableData","modifyData","updatedData","allData","put","update","then","apiRequestError","key","catch","error","selectEmpty","Selector","dataList","selectedValue","handleChangeSelect","Select","displayEmpty","inputProps","MenuItem","selected","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","root","flexGrow","padding","textAlign","text","Board","keywordInStore","columns","handleChangePageNumber","handleChangePageSize","handleRowClick","handleWriteButtonClick","handleSearch","handleShowAllContentsButton","handleChangeSearchTypeSelect","searchKeyword","onChangePage","onChangeRowsPerPage","icons","page","pagenationType","options","search","paginationType","onRowClick","rowData","components","Toolbar","justify","direction","searchTypes","placeholder","rand","Math","round","random","getModalStyle","top","left","transform","position","background","border","boxShadow","shadows","ContentsModal","userLoggedIn","userRoleLoggedIn","handleClose","handleSave","handleDelete","React","modalStyle","isModify","setIsModify","title","setTitle","setContents","Modal","open","onClose","aria-labelledby","aria-describedby","style","InputLabelProps","shrink","defaultValue","multiline","rows","ModalContentsWriter","writer","ModalButtons","menuButton","marginRight","Topbar","AppBar","IconButton","edge","aria-label","changePage","trim","clickRow","closeModal","clickWriteButton","changeShowAllContents","keywordSearch","searchTypeSelectorChange","field","delete","writeData","slice","App","path","exact","MainContainer","BoardContainer","logger","createLogger","store","createStore","applyMiddleware","ReduxThunk","console","log","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ecd5f51b.chunk.js","sourcesContent":["export default {\n    CHANGE_PAGE: 'BOARD/CHANGE_PAGE',\n    CLICK_ROW: 'BOARD/CLICK_ROW',\n    CLOSE_MODAL: 'BOARD/CLOSE_MODAL',\n    MODIFY_DATA: 'BOARD/MODIFY_DATA',\n    CLICK_WRITE_BUTTON: 'BOARD/CLICK_WRITE_BUTTON',\n    CHANGE_SHOWING_ALL_CONTENTS: 'BOARD/CHANGE_SHOWING_ALL_CONTENTS',\n    KEYWORD_SEARCH: 'BOARD/KEYWORD_SEARCH',\n    SEARCH_TYPE_SELECTOR_CHANGE: 'BOARD/SEARCH_TYPE_SELECTOR_CHANGE',\n    API_REQUEST_ERROR: 'BOARD/API_REQUEST_ERROR'\n}\n","export const DOMAIN = \"/freeboard01\";\nexport const BOARD_PAGE_SIZE = 5;\nexport const searchType = [\n    {value: \"ALL\", print: \"제목+내용\"},\n    {value: \"CONTENTS\", print: \"내용\"},\n    {value: \"TITLE\", print: \"제목\"},\n    {value: \"WRITER\", print: \"작성자\"}\n]\n","import {handleActions} from 'redux-actions'\nimport type from './type'\nimport {BOARD_PAGE_SIZE} from '../../../static/constant';\n\nconst initialState = {\n    pageNumber: 0,\n    pageSize: BOARD_PAGE_SIZE,\n    selectedData: [],\n    isModalOpen: false,\n    modalData: {},\n    isWriteModal: false,\n    isSearch: false,\n    keyword: \"\",\n    boardId: 0,\n    searchType: \"\",\n    isRequestFail: false,\n    errorCode: \"\",\n    errorMessage: \"\",\n};\n\nexport default handleActions({\n        [type.CHANGE_PAGE]: (state, action) => ({\n            ...state,\n            pageNumber: action.payload.pageNumber,\n            pageSize: action.payload.pageSize,\n            selectedData: action.payload.selectedData,\n            isRequestFail: false,\n        }),\n        [type.CLICK_ROW]: (state, action) => ({\n            ...state,\n            isModalOpen: true,\n            modalData: action.payload,\n        }),\n        [type.CLOSE_MODAL]: (state, action) => ({\n            ...state,\n            isModalOpen: false,\n            isWriteModal: false,\n            modalData: {},\n        }),\n        [type.MODIFY_DATA]: (state, action) => ({\n            ...state,\n            selectedData: action.payload,\n            isRequestFail: false,\n        }),\n        [type.CLICK_WRITE_BUTTON]: (state, action) => ({\n            ...state,\n            isModalOpen: true,\n            isWriteModal: true,\n        }),\n        [type.CHANGE_SHOWING_ALL_CONTENTS]: (state, action) => ({\n            ...state,\n            isSearch: false,\n            keyword: \"\",\n            boardId: (state.boardId === 0 ? 1 : 0),\n            pageNumber: action.payload.pageNumber,\n            pageSize: action.payload.pageSize,\n            selectedData: action.payload.selectedData,\n            isRequestFail: false,\n        }),\n        [type.KEYWORD_SEARCH]: (state, action) => ({\n            ...state,\n            isSearch: true,\n            keyword: action.payload.keyword,\n            boardId: (state.boardId === 0 ? 1 : 0),\n            pageNumber: action.payload.pageNumber,\n            pageSize: action.payload.pageSize,\n            selectedData: action.payload.selectedData,\n            isRequestFail: false,\n        }),\n        [type.SEARCH_TYPE_SELECTOR_CHANGE]: (state, action) => ({\n            ...state,\n            searchType: action.payload\n        }),\n        [type.API_REQUEST_ERROR]: (state, action) => ({\n            ...state,\n            isRequestFail: true,\n            errorCode: action.payload.code,\n            errorMessage: action.payload.message,\n        })\n    }, initialState\n)\n","export default {\n    LOGIN_SUCCESS : 'MAIN/LOGIN_SUCCESS',\n    LOGIN_FAIL : 'MAIN/LOGIN_FAIL',\n    PAGE_CHANGE : 'MAIN/PAGE_CHANGE',\n    JOIN_FAIL : 'MAIN/JOIN_FAIL'\n}\n","import {handleActions} from 'redux-actions'\nimport type from './type';\n\nconst initialState = {\n    accountId : null,\n    isLogged : false,\n    errorMessage : null,\n    isLoginPage : true,\n    role : null\n}\n\nexport default handleActions({\n        [type.LOGIN_SUCCESS] : (state, action) => ({\n            ...state,\n            accountId: action.payload.accountId,\n            role: action.payload.role,\n            isLogged: true\n        }),\n        [type.LOGIN_FAIL] : (state, action) => ({\n            ...state,\n            isLogged: false,\n            errorMessage: action.payload\n        }),\n        [type.PAGE_CHANGE] : (state, action) => ({\n            ...state,\n            errorMessage: null,\n            isLoginPage: !state.isLoginPage\n        }),\n        [type.JOIN_FAIL] : (state, action) => ({\n            ...state,\n            errorMessage: action.payload\n        })\n    }, initialState\n);\n","import {combineReducers, createStore} from \"redux\";\n\nimport board from './modules/board/reducer'\nimport main from './modules/main/reducer'\n\nconst rootReducer = combineReducers({\n    main,\n    board\n});\n\nexport default rootReducer;\n","import React, {useEffect, useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Your Website\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function Main({handleClick, message, isLoginPage, pageChange}) {\n    const classes = useStyles();\n\n    const [accountId, setAccountId] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    useEffect(() => {\n        setAccountId(\"\");\n        setPassword(\"\");\n    }, [isLoginPage])\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    {isLoginPage? <LockOutlinedIcon /> : <VpnKeyIcon />}\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    {isLoginPage ? \"Sign in\" : \"Sign up\"}\n                </Typography>\n                <Typography variant=\"subtitle1\" gutterBottom>\n                    {message}\n                </Typography>\n                <form className={classes.form} noValidate onSubmit={(event) => {event.preventDefault(); handleClick(accountId, password)}}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                        value={accountId}\n                        onChange={event => setAccountId(event.target.value)}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        value={password}\n                        onChange={event => setPassword(event.target.value)}\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        {isLoginPage ? \"Sign In\" : \"Sing Up\"}\n                    </Button>\n                    <Grid container>\n                        <Grid item xs>\n                            <Link href=\"#\" variant=\"body2\">\n                                Forgot password?\n                            </Link>\n                        </Grid>\n                        <Grid item>\n                            <Link href=\"#\" variant=\"body2\" onClick={() => pageChange()}>\n                                {isLoginPage ? \"Don't have an account? Sign Up\" : \"Already have an account? Sign In\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            <Box mt={8}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}\n","import axios from 'axios';\nimport { DOMAIN } from '../../static/constant';\n\n\nexport async function loginApi(accountId, password) {\n    try {\n        return await axios.post(DOMAIN+'/api/users?type=LOGIN',\n                {accountId: accountId, password: password});\n    } catch (error) {\n        const response = { data : {\n                code : error.response.status,\n                message: error.message\n            }};\n        return response;\n    }\n}\n\nexport async function joinApi(accountId, password) {\n    try {\n        return await axios.post(DOMAIN+'/api/users',\n                {accountId: accountId, password: password});\n    } catch (error) {\n        const response = { data : {\n                code : error.response.status,\n                message: error.message\n            }};\n        return response;\n    }\n}\n\nexport async function logoutApi() {\n    try {\n        await axios.get(DOMAIN+'/logout');\n    } catch (error) {\n        /* error control */\n    }\n}\n","import {createAction} from \"redux-actions\";\nimport type from './type'\n\nexport const loginSuccess = createAction(\n    type.LOGIN_SUCCESS, (accountId, role) => ({accountId, role})\n);\n\nexport const loginFail = createAction(\n    type.LOGIN_FAIL, errorMessage => errorMessage\n)\n\nexport const pageChange = createAction(\n    type.PAGE_CHANGE\n)\n\nexport const joinFail = createAction(\n    type.JOIN_FAIL, errorMessage => errorMessage\n)\n\n","import React from \"react\";\nimport {connect} from 'react-redux';\nimport {useHistory} from \"react-router-dom\";\n\n\nimport Main from \"../components/Main\";\n\nimport {joinApi, loginApi} from '../store/api/userApi';\nimport {joinFail, loginFail, loginSuccess, pageChange} from \"../store/modules/main/action\";\n\n\nconst MainContainer = ({isLoginPage, errorMessage, loginSuccess, loginFail, pageChange, joinFail}) => {\n    let history = useHistory();\n\n    const loginSubmit = async (id, password) => {\n        var response = await loginApi(id, password);\n        if (typeof response.data.code != \"undefined\") {\n            loginFail(response.data.message);\n        } else {\n            loginSuccess(response.data.accountId, response.data.role);\n            alert(\"로그인에 성공하셨습니다. 게시판으로 이동합니다.\");\n            history.push(\"/board\");\n        }\n    }\n\n    const joinSubmit = async (id, password) => {\n        var response = await joinApi(id, password);\n        if (typeof response.data.code != \"undefined\") {\n            joinFail(response.data.message);\n        } else {\n            alert(\"회원 가입에 성공하셨습니다. 로그인 페이지로 이동합니다.\");\n            pageChange();\n        }\n    }\n\n    return <Main\n        handleClick={isLoginPage ? loginSubmit : joinSubmit}\n        message={errorMessage}\n        isLoginPage={isLoginPage}\n        pageChange={pageChange}\n    />;\n}\n\nconst mapStateToProps = state => ({\n    errorMessage: state.main.errorMessage,\n    isLoginPage: state.main.isLoginPage,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    loginSuccess: (accountId, role) => dispatch(loginSuccess(accountId, role)),\n    loginFail: (errorMessage) => dispatch(loginFail(errorMessage)),\n    pageChange: () => dispatch(pageChange()),\n    joinFail: (errorMessage) => dispatch(joinFail(errorMessage))\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(MainContainer);\n","import axios from 'axios';\nimport { DOMAIN } from '../../static/constant';\n\nexport function get(pageNumber, pageSize) {\n    return axios.get(DOMAIN+'/api/boards?page='+pageNumber+'&size='+pageSize);\n}\n\nexport function update(id, updatedData) {\n    return axios.put(DOMAIN+'/api/boards/'+id, updatedData);\n}\n\nexport function deleteOne(id) {\n    return axios.delete(DOMAIN+'/api/boards/'+id);\n}\n\nexport function post(writeData) {\n    return axios.post(DOMAIN+'/api/boards', writeData);\n}\n\nexport function getForSearch(pageNumber, pageSize, searchType, keyword) {\n    return axios.get(DOMAIN+\"/api/boards?page=\"+pageNumber+\"&size=\"+pageSize+\"&type=\"+searchType+\"&keyword=\"+keyword);\n}\n","\nexport const getData = (pageNumber, pageSize, response) => {\n    let prevFakeData = createPrevFakeData(pageSize * pageNumber);\n    let nextFakeData = createNextFakeData(pageSize);\n    const realData = setRealData(response.data.contents);\n\n    if (isFirstPage(pageNumber)) {\n        if (realData.length === 0){\n            return new Array();\n        }\n        if (response.data.totalPages === 1) {\n            return realData;\n        }\n        return realData.concat(nextFakeData);\n    } else if (isLastPage(pageNumber, response)) {\n        return prevFakeData.concat(realData);\n    } else {\n        return prevFakeData.concat(realData).concat(nextFakeData);\n    }\n}\n\nconst setRealData = contents => {\n    contents.forEach(function (element, idx, data) {\n        var month = element.createdAt.month;\n        var dayOfMonth = element.createdAt.dayOfMonth;\n        var hour = element.createdAt.hour;\n        var minute = element.createdAt.minute;\n        data[idx].createdAt = month + '-' + dayOfMonth + ', ' + hour + ':' + minute;\n    })\n    return contents;\n}\n\nconst createPrevFakeData = size => {\n    let fakeData = Array.apply(null, new Array(size)).map(Object.prototype.valueOf, new Object());\n    return fakeData.map((currentValue, index) => setFakeData(index));\n}\n\n\nconst createNextFakeData = size => {\n    let fakeData = Array.apply(null, new Array(size)).map(Object.prototype.valueOf, new Object());\n    return fakeData.map((currentValue, index) => setFakeData(index));\n}\n\nconst setFakeData = id => {\n    let fakeData = new Object();\n    fakeData.tableData = {id: id};\n    return fakeData;\n}\n\nconst isFirstPage  = pageNumber => {\n    return pageNumber == 0;\n}\n\nconst isLastPage = (pageNumber, response) => {\n    return pageNumber == response.data.totalPages - 1\n}\n","import type from './type'\nimport {get, update, getForSearch} from \"../../api/boardApi\";\nimport {getData} from \"../../../helper/boardHelper\";\n\nexport const changePage = (pageNumber, pageSize, searchType, keyword, isSearch) => dispatch => {\n\n    const requestApi = (isSearch && keyword.trim() != \"\" ?\n        getForSearch(pageNumber + 1, pageSize, searchType, keyword) : get(pageNumber + 1, pageSize));\n\n    return requestApi.then(response => {\n        if (typeof response.data.code != \"undefined\") {\n            dispatch(apiRequestError(\"\", response.data.message))\n        } else {\n            const selectedData = getData(pageNumber, pageSize, response);\n            dispatch({\n                type: type.CHANGE_PAGE,\n                payload: {\n                    pageNumber: pageNumber,\n                    pageSize: pageSize,\n                    selectedData: selectedData\n                }\n            })\n        }\n    }).catch(error => {\n        dispatch(apiRequestError(error.response.status, error.message))\n    })\n}\n\nexport const keywordSearch = (pageSize, searchType, keyword) => dispatch => {\n    const pageNumber = 0;\n    return getForSearch(pageNumber + 1, pageSize, searchType, keyword)\n        .then(response => {\n            if (typeof response.data.code != \"undefined\") {\n                dispatch(apiRequestError(\"\", response.data.message))\n            } else {\n                const selectedData = getData(pageNumber, pageSize, response);\n                dispatch({\n                    type: type.KEYWORD_SEARCH,\n                    payload: {\n                        keyword: keyword,\n                        pageNumber: pageNumber,\n                        pageSize: pageSize,\n                        selectedData: selectedData\n                    }\n                })\n            }\n        }).catch(error => {\n            dispatch(apiRequestError(error.response.status, error.message))\n        })\n}\n\nexport const changeShowAllContents = (pageSize) => dispatch => {\n    const pageNumber = 0;\n\n    return get(pageNumber + 1, pageSize)\n        .then(response => {\n            if (typeof response.data.code != \"undefined\") {\n                dispatch(apiRequestError(\"\", response.data.message))\n            } else {\n                const selectedData = getData(pageNumber, pageSize, response);\n                dispatch({\n                    type: type.CHANGE_SHOWING_ALL_CONTENTS,\n                    payload: {\n                        pageNumber: pageNumber,\n                        pageSize: pageSize,\n                        selectedData: selectedData\n                    }\n                })\n            }\n        }).catch(error => {\n            dispatch(apiRequestError(error.response.status, error.message))\n        })\n}\n\nexport const clickRow = (rowData) => ({\n    type: type.CLICK_ROW,\n    payload: rowData\n})\n\nexport const closeModal = () => ({\n    type: type.CLOSE_MODAL,\n})\n\nexport const clickWriteButton = () => ({\n    type: type.CLICK_WRITE_BUTTON,\n})\n\n\nexport const modifyData = (id, updatedData, allData) => dispatch => {\n    return update(id, updatedData)\n        .then(response => {\n            if (typeof response.data.code != \"undefined\") {\n                dispatch(apiRequestError(\"\", response.data.message))\n            } else {\n                allData.forEach(function (element) {\n                    if (element.id == id) {\n                        for (var key in updatedData) {\n                            element[key] = updatedData[key];\n                        }\n                        return;\n                    }\n                })\n            }\n            dispatch({\n                type: type.MODIFY_DATA,\n                payload: allData,\n            })\n        }).catch(error => {\n            dispatch(apiRequestError(error.response.status, error.message))\n        })\n}\n\nexport const searchTypeSelectorChange = (value) => ({\n    type: type.SEARCH_TYPE_SELECTOR_CHANGE,\n    payload: value\n})\n\nexport const apiRequestError = (errorCode, errorMessage) => ({\n    type: type.API_REQUEST_ERROR,\n    payload: {\n        code: errorCode,\n        message: errorMessage\n    }\n})\n","import {MenuItem, Select} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nexport default function Selector({dataList, selectedValue, handleChangeSelect}) {\n    const classes = useStyles();\n\n    return (<Select\n        value={selectedValue === \"\" ? dataList[0].value : selectedValue}\n        onChange={event => handleChangeSelect(event.target.value)}\n        displayEmpty\n        className={classes.selectEmpty}\n        inputProps={{'aria-label': 'Without label'}}\n    >\n        {dataList.map((data) => (\n            <MenuItem key={data.value} value={data.value} selected>\n                {data.print}\n            </MenuItem>\n        ))}\n    </Select>);\n}\n","import React, {forwardRef, useEffect} from 'react';\nimport MaterialTable from 'material-table';\nimport {Button, Grid, TextField} from \"@material-ui/core\";\nimport {BOARD_PAGE_SIZE, searchType as searchTypes} from '../static/constant';\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Selector from \"./Selector\";\n\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref}/>),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref}/>),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref}/>),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref}/>),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref}/>),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref}/>),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref}/>),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref}/>),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref}/>),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref}/>),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref}/>),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref}/>),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref}/>),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref}/>),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref}/>),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref}/>),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref}/>)\n};\n\nconst useStyles = makeStyles((theme) => ({\n    margin: {\n        margin: theme.spacing(2),\n    },\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nexport default function Board({keywordInStore, pageNumber, pageSize, columns, selectedData, accountId, searchType, isRequestFail, errorCode, errorMessage,\n                                  handleChangePageNumber, handleChangePageSize, handleRowClick, handleWriteButtonClick, handleSearch, handleShowAllContentsButton, handleChangeSearchTypeSelect}) {\n    const classes = useStyles();\n\n    let searchKeyword = \"\";\n    const setSearchKeyword = (value) => {\n        searchKeyword = value;\n    };\n\n    useEffect(()=>{\n        if(isRequestFail === true){\n            alert(errorCode+\" : \"+errorMessage);\n        }\n    }, [isRequestFail, errorCode, errorMessage]);\n\n    return (\n        <MaterialTable\n            onChangePage={handleChangePageNumber}\n            onChangeRowsPerPage={handleChangePageSize}\n            icons={tableIcons}\n            columns={columns}\n            page={pageNumber}\n            data={selectedData}\n            pagenationType=\"stepped\"\n            options={{\n                search: false,\n                paginationType: \"stepped\",\n                pageSize: BOARD_PAGE_SIZE\n            }}\n            onRowClick={(event, rowData) => {\n                handleRowClick(rowData);\n            }}\n            components={{\n                Toolbar: props => (\n                    <Grid container>\n                        <Grid item xs={6}>\n                            {typeof accountId != 'undefined' && accountId != null ?\n                                <Grid className={classes.margin}>\n                                    <Button color=\"primary\" size=\"medium\" variant=\"outlined\"\n                                            onClick={() => handleWriteButtonClick()}>글쓰기</Button>\n                                </Grid>\n                                : null\n                            }\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Grid container alignItems=\"center\" justify=\"flex-end\" direction=\"row\">\n                                <Grid className={classes.margin}>\n                                    <Grid container spacing={1} alignItems=\"flex-end\">\n                                        <Grid item>\n                                            <SearchIcon/>\n                                        </Grid>\n                                        <Grid item>\n                                            <Selector\n                                                dataList={searchTypes}\n                                                selectedValue={searchType}\n                                                handleChangeSelect={handleChangeSearchTypeSelect}\n                                            />\n                                        </Grid>\n                                        <Grid item>\n                                            <TextField id=\"input-with-icon-grid\"\n                                                       placeholder={keywordInStore != \"\" ? \"검색어: \" + keywordInStore : \"검색어를 입력하세요.\"}\n                                                       onChange={event => setSearchKeyword(event.target.value)}/>\n                                        </Grid>\n                                        <Grid>\n                                            <Button color=\"primary\" size=\"medium\"\n                                                    onClick={() => handleSearch(pageSize, searchType, searchKeyword)}>Search</Button>\n                                        </Grid>\n                                        <Grid>\n                                            <Button color=\"secondary\" size=\"medium\"\n                                                    onClick={() => handleShowAllContentsButton(pageSize)}>전체글\n                                                보기</Button>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                ),\n            }}\n        />\n    );\n}\n","import React, {useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Button, Modal, TextField, Typography, Grid} from '@material-ui/core';\nimport {isAdminRole} from '../helper/specification';\n\nfunction rand() {\n    return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n    const top = 50 + rand();\n    const left = 50 + rand();\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\n\nexport default function ContentsModal({isModalOpen, modalData, userLoggedIn, userRoleLoggedIn, isWriteModal, handleClose, handleSave, handleDelete}) {\n    const classes = useStyles();\n    // getModalStyle is not a pure function, we roll the style only on the first render\n    const [modalStyle] = React.useState(getModalStyle);\n\n    const [isModify, setIsModify] = useState(false);\n    const [title, setTitle] = useState(modalData.title);\n    const [contents, setContents] = useState(modalData.contents);\n\n    const combineData = () => {\n        return {\n            title: title,\n            contents: contents\n        }\n    }\n\n    return (\n        <div>\n            <Modal\n                open={isModalOpen}\n                onClose={handleClose}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n            >\n                <div style={modalStyle} className={classes.paper}>\n                    <form className={classes.form} noValidate onSubmit={(event) => {\n                        event.preventDefault();\n                        handleSave(combineData());\n                    }}>\n                        {(isWriteModal || isModify) ?\n                            <div>\n                                <TextField\n                                    id=\"outlined-full-width\"\n                                    label=\"제목\"\n                                    placeholder=\"제목을 입력하세요.\"\n                                    fullWidth\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    variant=\"outlined\"\n                                    defaultValue={modalData.title}\n                                    margin=\"normal\"\n                                    onChange={event => setTitle(event.target.value)}\n                                    required\n                                />\n                                <TextField\n                                    id=\"outlined-multiline-static\"\n                                    label=\"내용\"\n                                    placeholder=\"내용을 입력하세요.\"\n                                    fullWidth\n                                    multiline\n                                    rows={4}\n                                    defaultValue={modalData.contents}\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    onChange={event => setContents(event.target.value)}\n                                    required\n                                />\n                            </div>\n                            :\n                            <div>\n                                <h2 id=\"simple-modal-title\">{modalData.title}</h2>\n                                <Typography variant=\"body1\" gutterBottom>{modalData.contents}</Typography>\n                            </div>\n                        }\n                        <hr/>\n                        {isWriteModal ?\n                            <div>\n                                <ModalContentsWriter writer={userLoggedIn}/>\n                                <Grid container>\n                                    <Button type=\"submit\" color=\"primary\" className={classes.submit}>Save</Button>\n                                    <Button onClick={() => {\n                                        setIsModify(false);\n                                        handleClose();\n                                    }}>Close</Button>\n                                </Grid>\n                            </div>\n                            :\n                            <div>\n                                <ModalContentsWriter writer={modalData.writer}/>\n                                <Typography variant=\"body2\" gutterBottom>작성일 : {modalData.createdAt}</Typography>\n                                <Grid container>\n                                    {isModify ?\n                                        <Grid>\n                                            <Button type=\"submit\" color=\"primary\"\n                                                    className={classes.submit}>Save</Button>\n                                            <Button onClick={() => setIsModify(false)}>Back</Button>\n                                        </Grid>\n                                        :\n                                        <ModalButtons\n                                            setIsModify={setIsModify}\n                                            handleDelete={handleDelete}\n                                            writer={modalData.writer}\n                                            userLoggedIn={userLoggedIn}\n                                            userRoleLoggedIn={userRoleLoggedIn}\n                                        />\n                                    }\n                                    <Button onClick={() => {\n                                        setIsModify(false);\n                                        handleClose();\n                                    }}>Close</Button>\n                                </Grid>\n                            </div>\n                        }\n                    </form>\n                </div>\n            </Modal>\n        </div>\n    );\n}\n\n\nfunction ModalButtons({writer, userLoggedIn, setIsModify, handleDelete, userRoleLoggedIn}) {\n    return (\n        <span>\n            <Grid>\n            {writer.accountId == userLoggedIn ? <Button color=\"primary\" onClick={() => setIsModify(true)}>Modify</Button> : null}\n            {isAdminRole(userRoleLoggedIn) || writer.accountId == userLoggedIn ? <Button color=\"secondary\" onClick={() => handleDelete()}>Delete</Button> : null}\n            </Grid>\n        </span>\n    );\n}\n\nfunction ModalContentsWriter({writer}) {\n    if (typeof writer == 'object') {\n        writer = writer.accountId\n    }\n    return (\n        <Typography variant=\"body2\" gutterBottom>작성자 : {writer}</Typography>\n    );\n}\n\n","export const isAdminRole = (role) => {\n    return role === \"ADMIN\";\n}\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {Grid} from \"@material-ui/core\";\nimport {logoutApi} from \"../store/api/userApi\";\n\nimport {useHistory} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function Topbar({title, accountId}) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <MenuIcon/>\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        {title}\n                    </Typography>\n                    {typeof accountId != 'undefined' && accountId != null ?\n                        <Button onClick={async () => {\n                            await logoutApi();\n                            history.push(\"/\")\n                        }} variant=\"contained\" size=\"medium\" color=\"primary\" >로그아웃</Button>\n\n                        :\n                        <Button variant=\"contained\" size=\"medium\" color=\"primary\" onClick={() => history.push(\"/\")}>로그인</Button>\n                    }\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","import React, {useEffect} from \"react\";\nimport {connect} from 'react-redux';\nimport {changePage, clickRow, closeModal, clickWriteButton, modifyData, keywordSearch, changeShowAllContents, searchTypeSelectorChange} from \"../store/modules/board/action\";\nimport Board from \"../components/Board\";\nimport ContentsModal from \"../components/ContentsModal\";\nimport {deleteOne, post} from \"../store/api/boardApi\";\nimport Topbar from \"../components/Topbar\";\nimport {useHistory} from \"react-router-dom\";\n\nconst BoardContainer = ({pageNumber, pageSize, selectedData, isModalOpen, modalData, accountId, role, isWriteModal, isSearch, keyword, boardId, searchType, isRequestFail, errorCode, errorMessage,\n                            changePage, clickRow, closeModal, clickWriteButton, modifyData, keywordSearch, changeShowAllContents, searchTypeSelectorChange}) => {\n\n    const history = useHistory();\n\n    useEffect(() => {\n        if(accountId == null){\n            history.push(\"/\");\n        }\n        changePage(pageNumber, pageSize);\n    }, [])\n\n    const columns = [\n        {title: '제목', field: 'title'},\n        {title: '작성자', field: 'writer.accountId'},\n        {title: '작성일시', field: 'createdAt'},\n    ]\n\n    const handleChangePageNumber = (pageNumber) => {\n        changePage(pageNumber, pageSize, searchType, keyword, isSearch);\n    };\n\n    const handleChangePageSize = (pageSize) => {\n        changePage(pageNumber, pageSize, searchType, keyword, isSearch);\n    };\n\n    const handleModify = (updatedData) => {\n        modifyData(modalData.id, updatedData, selectedData.slice(0));\n        closeModal();\n    }\n\n    const handleDelete = () => {\n        deleteOne(modalData.id)\n            .then(response => {\n                changePage(pageNumber, pageSize);\n                closeModal();\n            });\n    }\n\n    const handleWrite = (writeData) => {\n        post(writeData)\n            .then(response => {\n                changePage(0, pageSize);\n                closeModal();\n            })\n    }\n\n    return (\n        <div>\n            <Topbar\n                title=\"게시판\"\n                accountId={accountId}\n            />\n            <Board\n                key={boardId}\n                pageNumber={pageNumber}\n                pageSize={pageSize}\n                searchType={searchType}\n                handleChangeSearchTypeSelect={searchTypeSelectorChange}\n                keywordInStore={keyword}\n                handleChangePageNumber={handleChangePageNumber}\n                handleChangePageSize={handleChangePageSize}\n                handleWriteButtonClick={clickWriteButton}\n                handleRowClick={clickRow}\n                handleSearch={keywordSearch}\n                handleShowAllContentsButton={changeShowAllContents}\n                columns={columns}\n                selectedData={selectedData}\n                accountId={accountId}\n                isRequestFail={isRequestFail}\n                errorCode={errorCode}\n                errorMessage={errorMessage}\n            />\n            { isModalOpen ?\n            <ContentsModal\n                userLoggedIn={accountId}\n                userRoleLoggedIn={role}\n                isModalOpen={isModalOpen}\n                modalData={modalData}\n                isSearch={isSearch}\n                keyword={keyword}\n                handleClose={closeModal}\n                handleDelete={handleDelete}\n                handleSave={isWriteModal? handleWrite : handleModify}\n                isWriteModal={isWriteModal}\n            />\n            : null}\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n    pageNumber : state.board.pageNumber,\n    pageSize : state.board.pageSize,\n    selectedData : state.board.selectedData,\n    isModalOpen: state.board.isModalOpen,\n    modalData: state.board.modalData,\n    accountId: state.main.accountId,\n    role: state.main.role,\n    isWriteModal: state.board.isWriteModal,\n    isSearch: state.board.isSearch,\n    keyword: state.board.keyword,\n    boardId: state.board.boardId,\n    searchType: state.board.searchType,\n    isRequestFail: state.board.isRequestFail,\n    errorCode: state.board.errorCode,\n    errorMessage: state.board.errorMessage,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    changePage : (pageNumber, pageSize, searchType, keyword, isSearch) => dispatch(changePage(pageNumber, pageSize, searchType, keyword, isSearch)),\n    clickRow: (rowData) => dispatch(clickRow(rowData)),\n    closeModal: () => dispatch(closeModal()),\n    clickWriteButton: () => dispatch(clickWriteButton()),\n    modifyData: (id, updatedData, allData) => dispatch(modifyData(id, updatedData, allData)),\n    changeShowAllContents: (pageSize) => dispatch(changeShowAllContents(pageSize)),\n    keywordSearch: (pageSize, searchType, keyword) => dispatch(keywordSearch(pageSize, searchType, keyword)),\n    searchTypeSelectorChange: (value) => dispatch(searchTypeSelectorChange(value)),\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(BoardContainer)\n","import React from \"react\";\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport MainContainer from \"./containers/MainContainer\";\nimport BoardContainer from \"./containers/BoardContainer\";\n\nconst App = () => {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route path=\"/\" exact component={MainContainer}/>\n                <Route path=\"/board\" component={BoardContainer} />\n            </Switch>\n        </BrowserRouter>\n    )\n\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from 'react-dom';\n\nimport {applyMiddleware, createStore} from 'redux';\nimport rootReducer from './store/rootReducer';\n\nimport {createLogger} from \"redux-logger/src\";\nimport ReduxThunk from 'redux-thunk';\n\nimport {Provider} from 'react-redux';\n\nimport './index.css';\nimport App from './App';\n\nconst logger = createLogger();\nconst store = createStore(rootReducer, applyMiddleware(logger, ReduxThunk));\nconsole.log(store.getState());\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}